paths:
  /books:
    get:
      summary: Get all books
      operationId: getAllBooks
      responses:
        '200':
          description: List of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookResponse'
    post:
      summary: Add a new book
      operationId: createBook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRequest'
      responses:
        '200':
          description: Book created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookResponse'

  /books/{id}:
    get:
      summary: Get a book by ID
      operationId: getBook
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Book details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookResponse'
    put:
      summary: Update a book by ID
      operationId: updateBook
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookRequest'
      responses:
        '200':
          description: Book updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookResponse'
    delete:
      summary: Delete a book by ID
      operationId: deleteBook
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Book deleted successfully

components:
  schemas:
    TypeEnum:
      type: string
      enum: [ NEW_RELEASE, REGULAR, OLD_EDITION ]

    BookRequest:
      type: object
      required:
        - title
        - author
        - type
        - basePrice
        - quantity
      properties:
        title:
          type: string
          minLength: 1
        author:
          type: string
          minLength: 1
        type:
          $ref: '#/components/schemas/TypeEnum'
        basePrice:
          type: string
          format: decimal
          minimum: 0.0
        quantity:
          type: integer
          format: int32
          minimum: 0
    BookResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        author:
          type: string
        type:
          $ref: '#/components/schemas/TypeEnum'
        basePrice:
          type: string
          format: decimal
          minimum: 0.0
        quantity:
          type: integer
          format: int32
          minimum: 0


